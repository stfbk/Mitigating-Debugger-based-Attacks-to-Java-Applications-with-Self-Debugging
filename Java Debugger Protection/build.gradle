apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'c'

mainClassName = 'HelloWorld'

repositories {
    mavenCentral()
}
dependencies {
  testCompile('junit:junit:4.12')
    implementation 'junit:junit:4.12'
}


jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


sourceCompatibility = 8
targetCompatibility = 8

test {
    systemProperty "java.library.path", file("${buildDir}/libs/hello/shared").absolutePath
}

model {
  platforms {
    x64 {
        architecture "x64"
    }
  }

  components {
    hello(NativeLibrarySpec) {
        binaries.all {
        if (targetPlatform.operatingSystem.macOsX) {
            cCompiler.args '-I', "${org.gradle.internal.jvm.Jvm.current().javaHome}/include"
            cCompiler.args '-I', "${org.gradle.internal.jvm.Jvm.current().javaHome}/include/darwin"
            cCompiler.args '-mmacosx-version-min=10.4'
            linker.args '-mmacosx-version-min=10.4'
        } else if (targetPlatform.operatingSystem.linux) {
            cCompiler.args '-I', "${org.gradle.internal.jvm.Jvm.current().javaHome}/include"
            cCompiler.args '-I', "${org.gradle.internal.jvm.Jvm.current().javaHome}/include/linux"
            cCompiler.args '-D_FILE_OFFSET_BITS=64'
        } else if (targetPlatform.operatingSystem.windows) {
            cCompiler.args "-I${org.gradle.internal.jvm.Jvm.current().javaHome}/include"
            cCompiler.args "-I${org.gradle.internal.jvm.Jvm.current().javaHome}/include/win32"
            linker.args "Shlwapi.lib", "Advapi32.lib"
        } else if (targetPlatform.operatingSystem.freeBSD) {
            cCompiler.args '-I', "${org.gradle.internal.jvm.Jvm.current().javaHome}/include"
            cCompiler.args '-I', "${org.gradle.internal.jvm.Jvm.current().javaHome}/include/freebsd"
        }
      }
    }
  }
}

test.dependsOn  'helloSharedLibrary'
